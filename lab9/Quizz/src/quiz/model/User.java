package quiz.model;

/**
 * Represents a user in the quiz application.
 * This class stores the user's username, a hashed version of their password for security,
 * and their best score achieved in any quiz.
 */
public class User {
    /**
     * The unique identifier for the user.
     */
    private Integer id;

    /**
     * The username  identifier for the user.
     */
    private String username;

    /**
     * A secure hash of the user's password.
     * Storing the hash instead of the plain text password enhances security.
     */
    private String passwordHash;

    /**
     * The highest score achieved by this user across all completed quizzes.
     * This allows tracking of the user's progress and performance.
     */
    private Integer bestResult;

    /**
     * Default constructor for the User class.
     * Initializes a new User object with default values (likely null or zero).
     */
    public User() {}

    /**
     * Constructor for creating a new user (without ID, as it will be generated by the database).
     *
     * @param username     The unique username for the user.
     * @param passwordHash The hashed password of the user.
     * @param bestResult   The initial best result achieved by the user.
     */
    public User(String username, String passwordHash, Integer bestResult) {
        this.username = username;
        this.passwordHash = passwordHash;
        this.bestResult = bestResult;
    }

    /**
     * Constructor for creating a user with an existing ID (typically when loading from database).
     *
     * @param id           The unique identifier for the user.
     * @param username     The unique username for the user.
     * @param passwordHash The hashed password of the user.
     * @param bestResult   The initial best result achieved by the user.
     */
    public User(Integer id, String username, String passwordHash, Integer bestResult) {
        this.id = id;
        this.username = username;
        this.passwordHash = passwordHash;
        this.bestResult = bestResult;
    }

    /**
     * Retrieves the id of the user.
     *
     * @return The user's id.
     */
    public int getId() {
        return id;
    }

    /**
     * Sets the id of the user.
     *
     * @param id The new id to assign to the user.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Retrieves the username of the user.
     *
     * @return The user's username.
     */
    public String getUsername() {
        return username;
    }

    /**
     * Sets the username of the user.
     *
     * @param username The new username to assign to the user.
     */
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Retrieves the hashed password of the user.
     *
     * @return The user's password hash.
     */
    public String getPasswordHash() {
        return passwordHash;
    }

    /**
     * Sets the hashed password of the user.
     *
     * @param passwordHash The new hashed password to assign to the user.
     */
    public void setPasswordHash(String passwordHash) {
        this.passwordHash = passwordHash;
    }

    /**
     * Retrieves the best result achieved by the user.
     *
     * @return The user's best result.
     */
    public Integer getBestResult() {
        return this.bestResult;
    }

    /**
     * Sets the best result achieved by the user.
     *
     * @param newBestResult The new best result to record for the user.
     */
    public void setBestResult(Integer newBestResult) {
        this.bestResult = newBestResult;
    }
}